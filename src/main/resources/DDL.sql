CREATE DATABASE IF NOT EXISTS building_company;
USE building_company;

CREATE TABLE IF NOT EXISTS Addresses(
id SERIAL,
city VARCHAR(20) NOT NULL,
street VARCHAR(20) NOT NULL,
house_number VARCHAR(10) NOT NULL,
apartment_number INT UNSIGNED NULL,
PRIMARY KEY(id)
);

CREATE TABLE IF NOT EXISTS Building_companies(
id SERIAL,
address_id BIGINT UNSIGNED NOT NULL,
name VARCHAR(45) NOT NULL UNIQUE,
PRIMARY KEY(id),
CONSTRAINT fk_companies_address_id FOREIGN KEY(address_id) REFERENCES Addresses(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Clients(
id SERIAL,
address_id BIGINT UNSIGNED NOT NULL,
company_id BIGINT UNSIGNED NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_clients_address_id FOREIGN KEY(address_id) REFERENCES Addresses(id)
ON UPDATE NO ACTION
ON DELETE CASCADE,
CONSTRAINT fk_clients_company_id FOREIGN KEY(company_id) REFERENCES Building_companies(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Feedbacks(
id SERIAL,
company_id BIGINT UNSIGNED NOT NULL,
client_id BIGINT UNSIGNED NOT NULL,
message TEXT NOT NULL,
created_at TIMESTAMP NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_feedbacks_company_id FOREIGN KEY(company_id) REFERENCES Building_companies(id)
ON UPDATE NO ACTION
ON DELETE CASCADE,
CONSTRAINT fk_feedbacks_client_id FOREIGN KEY(client_id) REFERENCES Clients(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Orders(
id SERIAL,
client_id BIGINT UNSIGNED NOT NULL,
number BIGINT NOT NULL UNIQUE,
started_at TIMESTAMP NOT NULL,
ended_at TIMESTAMP NOT NULL,
responsible_person VARCHAR(50) NOT NULL,
modified_at TIMESTAMP NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_orders_client_id FOREIGN KEY(client_id) REFERENCES Clients(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Employees(
id SERIAL,
company_id BIGINT UNSIGNED NOT NULL,
first_name VARCHAR(20) NOT NULL,
last_name VARCHAR(20) NOT NULL,
date_of_birth TIMESTAMP NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_employees_company_id FOREIGN KEY(company_id) REFERENCES Building_companies(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Employee_addresses(
id SERIAL,
address_id BIGINT UNSIGNED NOT NULL,
employee_id BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_employee_addresses_address_id FOREIGN KEY(address_id) REFERENCES Addresses(id)
ON UPDATE NO ACTION 
ON DELETE CASCADE,
CONSTRAINT fk_employee_addresses_employee_id FOREIGN KEY(employee_id) REFERENCES Employees(id)
ON UPDATE NO ACTION 
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Pay_sheets(
id SERIAL,
employee_id BIGINT UNSIGNED NOT NULL,
personnel_number BIGINT NOT NULL UNIQUE,
hours_worked DOUBLE UNSIGNED NOT NULL,
payment_rubles_per_hour DOUBLE UNSIGNED NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_pay_sheets_employee_id FOREIGN KEY(employee_id) REFERENCES Employees(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Materials(
id SERIAL,
type VARCHAR(45) NULL,
name VARCHAR(45) NOT NULL,
quantity BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(id)
);
CREATE UNIQUE INDEX unique_idx_materials_name ON Materials(name);

CREATE TABLE IF NOT EXISTS Warehouses(
id SERIAL,
company_id BIGINT UNSIGNED NOT NULL,
updated_at TIMESTAMP NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_warehouses_company_id FOREIGN KEY(company_id) REFERENCES Building_companies(id)
ON UPDATE NO ACTION 
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Warehouse_materials(
id SERIAL,
material_id BIGINT UNSIGNED NOT NULL,
warehouse_id BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_warehouse_materials_material_id FOREIGN KEY(material_id) REFERENCES Materials(id)
ON UPDATE NO ACTION
ON DELETE CASCADE,
CONSTRAINT fk_warehouse_materials_warehouse_id FOREIGN KEY(warehouse_id) REFERENCES Warehouses(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Services(
id SERIAL,
company_id BIGINT UNSIGNED NOT NULL,
name VARCHAR(45) NOT NULL,
price DOUBLE UNSIGNED NOT NULL,
modified_at TIMESTAMP NOT NULL,
PRIMARY KEY(id),
CONSTRAINT fk_services_company_id FOREIGN KEY(company_id) REFERENCES Building_companies(id)
ON UPDATE NO ACTION
ON DELETE CASCADE
);
CREATE UNIQUE INDEX unique_idx_services_name ON Services(name);

















